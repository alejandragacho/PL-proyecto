TRADUCTOR DE EXPRESIONES QUÍMICAS A TEXTO 

1. Diseño del programa

El objetivo es tomar una fórmula química como entrada, analizarla y generar un texto explicativo que describa los componentes de la fórmula. Ejemplo:
Entrada: H2O
Salida: "Dihidrógeno Monóxido"

2. Componentes del proyecto
a) Análisis léxico (Flex)

Define tokens básicos como elementos químicos, subíndices, paréntesis, etc.
b) Análisis sintáctico (Bison)

Define las reglas gramaticales para reconocer fórmulas válidas.
c) Generación de código de salida

Traduce la fórmula al texto explicativo usando funciones auxiliares.
d) Comprobación de errores

Incluye detección de fórmulas inválidas o elementos no reconocidos.

3. Estructura del proyecto

Archivos principales:

    lexer.l: Definición del análisis léxico.
    parser.y: Reglas de gramática y análisis sintáctico.
    translator.c: Lógica para traducir fórmulas químicas a texto.
    Makefile: Para compilar y enlazar el proyecto con gcc.


ARCHIVO : PARSER.Y

------ REGLAS GRAMATICALES NECESARIAS ------------------------------------------------------------

1. Fórmulas Simples

    Una fórmula básica puede consistir en un único elemento con o sin subíndice.

2. Fórmulas Compuestas

    Una fórmula puede ser una secuencia de elementos con subíndices opcionales

3. Fórmulas con Paréntesis

    Los paréntesis se utilizan para agrupar partes de la fórmula que se repiten.

4. Grupos Repetidos

    Si dentro de los paréntesis hay un grupo de elementos, se procesan recursivamente.

5. Fórmulas Complejas

    Combinar fórmulas simples, paréntesis, y números para manejar compuestos avanzados.